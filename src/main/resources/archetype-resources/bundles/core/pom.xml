<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>${groupId}</groupId>
    <artifactId>${rootArtifactId}.parent</artifactId>
    <version>${version}</version>
    <relativePath>../../parent/pom.xml</relativePath>
  </parent>

  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>
  <packaging>jar</packaging>

  <name>${projectName} Core</name>

  <dependencies>

#if ( $optionAemVersion != "cloud" )
#if ( $optionSlingModelsLatest == "y" )
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.models.api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.models.impl</artifactId>
      <scope>test</scope>
    </dependency>

#end
#if ( $optionContextAwareConfigLatest == "y" )
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.caconfig.api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.caconfig.spi</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.caconfig.impl</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.models.caconfig</artifactId>
      <scope>compile</scope>
    </dependency>

#end
#end
#if ( $optionWcmioHandler == "y" )
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.sling.models</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.sling.commons</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.handler.commons</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.handler.url</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.handler.link</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.handler.media</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.handler.richtext</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.wcm.commons</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.wcm.core.components</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.wcm.parsys</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.wcm.ui.granite</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.wcm.ui.clientlibs</artifactId>
      <scope>compile</scope>
    </dependency>

#end
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.aem-mock.junit5</artifactId>
      <scope>test</scope>
    </dependency>
#if ( $optionAemVersion == "6.5" && ($optionAemServicePack=="y" || $optionAemServicePackAPI=="y") )
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.logging.logback</artifactId>
      <scope>test</scope>
    </dependency>
#else
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.logging-mock</artifactId>
      <scope>test</scope>
    </dependency>
#end
    <dependency>
      <groupId>com.adobe.cq</groupId>
      <artifactId>core.wcm.components.testing.aem-mock-plugin</artifactId>
      <scope>test</scope>
    </dependency>
#if ( $optionContextAwareConfig == "y" )
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.caconfig-mock-plugin</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.wcm-io-mock.caconfig</artifactId>
      <scope>test</scope>
    </dependency>
#end
#if ( $optionWcmioHandler == "y" )
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.wcm-io-mock.sling</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.wcm-io-mock.wcm</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.wcm</groupId>
      <artifactId>io.wcm.testing.wcm-io-mock.handler</artifactId>
      <scope>test</scope>
    </dependency>
#end

    <dependency>
      <groupId>com.adobe.cq</groupId>
      <artifactId>core.wcm.components.core</artifactId>
      <scope>compile</scope>
    </dependency>
#if( $optionAcsCommons == "y" )
    <dependency>
      <groupId>com.adobe.acs</groupId>
      <artifactId>acs-aem-commons-bundle</artifactId>
      <scope>compile</scope>
    </dependency>
#end

    <!-- AEM dependencies provided - so each project has full control about their positions (should always be last in the list). -->
#if ( $optionAemVersion == "cloud" )
    <dependency>
      <groupId>com.adobe.aem</groupId>
      <artifactId>aem-sdk-api</artifactId>
      <scope>provided</scope>
    </dependency>
#else
    <dependency>
      <groupId>com.adobe.aem</groupId>
      <artifactId>uber-jar</artifactId>
#if ( $optionAemVersion == "6.5" && $optionAemServicePack=="n" && $optionAemServicePackAPI=="n" )
      <classifier>apis</classifier>
#end
      <scope>provided</scope>
    </dependency>
#end
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
#if ( $optionMultiBundleLayout != "y" && $optionSlingInitialContentBundle == "y" && $optionAemVersion != "cloud" )
    <resources>
      <!-- copy webapp resources to SLING-INF/app-root -->
      <resource>
        <directory>src/main/webapp</directory>
        <targetPath>SLING-INF</targetPath>
        <filtering>false</filtering>
      </resource>
      <!-- Apply maven filtering to clientlib definitions (cache key) -->
      <resource>
        <directory>src/main/webapp</directory>
        <targetPath>SLING-INF</targetPath>
        <filtering>true</filtering>
        <includes>
          <include>clientlibs-root/*.json</include>
        </includes>
      </resource>
    </resources>

#end
    <plugins>

      <plugin>
        <groupId>biz.aQute.bnd</groupId>
        <artifactId>bnd-maven-plugin</artifactId>
        <configuration>
          <bnd>
            <!-- Export all non-internal packages by default -->
            Export-Package: !*.impl.*,!*.internal.*,\
              ${package}.*
#if ( $optionSlingInitialContentBundle == "y" )

            Sling-Initial-Content: \
#if ( $optionMultiBundleLayout == "n" )
              SLING-INF/clientlibs-root;overwrite:=true;ignoreImportProviders:=xml;path:=/apps/${projectName}/clientlibs, \
#end
              SLING-INF/app-root;overwrite:=true;ignoreImportProviders:=xml;path:=/apps/${projectName}/core, \
              SLING-INF/app-i18n;overwrite:=true;ignoreImportProviders:=json;path:=/apps/${projectName}/core/i18n
#end
#if ( $optionWcmioHandler == "y" )

            <!-- All wcm.io Handler SPI implementation only get active for the resource paths of this application -->
            Wcmio-CAService-ContextPathRegex: ^(/content|/content/dam|/content/experience-fragments|/conf)/${projectName}(/.*)?$
#end
#if ( $optionJavaVersion == "8" )

            <!-- For build compatibility with Java 11 -->
            Import-Package:  \
              javax.annotation;version="[0.0,2)", \
              *
#end
          </bnd>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
